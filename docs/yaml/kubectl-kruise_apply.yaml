name: kubectl-kruise apply
synopsis: Apply a configuration to a resource by file name or stdin
description: |-
    Apply a configuration to a resource by file name or stdin. The resource name must be specified. This resource will be created if it doesn't exist yet. To use 'apply', always create the resource initially with either 'apply' or 'create --save-config'.

     JSON and YAML formats are accepted.

     Alpha Disclaimer: the --prune functionality is not yet complete. Do not use unless you are aware of what the current state is. See https://issues.k8s.io/34274.
usage: kubectl-kruise apply (-f FILENAME | -k DIRECTORY)
options:
    - name: all
      default_value: "false"
      usage: |
        Select all resources in the namespace of the specified resource types.
    - name: allow-missing-template-keys
      default_value: "true"
      usage: |
        If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.
    - name: cascade
      default_value: background
      usage: |
        Must be "background", "orphan", or "foreground". Selects the deletion cascading strategy for the dependents (e.g. Pods created by a ReplicationController). Defaults to background.
    - name: dry-run
      default_value: none
      usage: |
        Must be "none", "server", or "client". If client strategy, only print the object that would be sent, without sending it. If server strategy, submit server-side request without persisting the resource.
    - name: field-manager
      default_value: kubectl-client-side-apply
      usage: Name of the manager used to track field ownership.
    - name: filename
      shorthand: f
      default_value: '[]'
      usage: that contains the configuration to apply
    - name: force
      default_value: "false"
      usage: |
        If true, immediately remove resources from API and bypass graceful deletion. Note that immediate deletion of some resources may result in inconsistency or data loss and requires confirmation.
    - name: force-conflicts
      default_value: "false"
      usage: |
        If true, server-side apply will force the changes against conflicts.
    - name: grace-period
      default_value: "-1"
      usage: |
        Period of time in seconds given to the resource to terminate gracefully. Ignored if negative. Set to 1 for immediate shutdown. Can only be set to 0 when --force is true (force deletion).
    - name: help
      shorthand: h
      default_value: "false"
      usage: help for apply
    - name: kustomize
      shorthand: k
      usage: |
        Process a kustomization directory. This flag can't be used together with -f or -R.
    - name: openapi-patch
      default_value: "true"
      usage: |
        If true, use openapi to calculate diff when the openapi presents and the resource can be found in the openapi spec. Otherwise, fall back to use baked-in types.
    - name: output
      shorthand: o
      usage: |
        Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file).
    - name: overwrite
      default_value: "true"
      usage: |
        Automatically resolve conflicts between the modified and live configuration by using values from the modified configuration
    - name: prune
      default_value: "false"
      usage: |
        Automatically delete resource objects, that do not appear in the configs and are created by either apply or create --save-config. Should be used with either -l or --all.
    - name: prune-whitelist
      default_value: '[]'
      usage: |
        Overwrite the default whitelist with <group/version/kind> for --prune
    - name: record
      default_value: "false"
      usage: |
        Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.
    - name: recursive
      shorthand: R
      default_value: "false"
      usage: |
        Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.
    - name: selector
      shorthand: l
      usage: |
        Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2). Matching objects must satisfy all of the specified label constraints.
    - name: server-side
      default_value: "false"
      usage: If true, apply runs in the server instead of the client.
    - name: show-managed-fields
      default_value: "false"
      usage: |
        If true, keep the managedFields when printing objects in JSON or YAML format.
    - name: template
      usage: |
        Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
    - name: timeout
      default_value: 0s
      usage: |
        The length of time to wait before giving up on a delete, zero means determine a timeout from the size of the object
    - name: validate
      default_value: strict
      usage: |-
        Must be one of: strict (or true), warn, ignore (or false).
        		"true" or "strict" will use a schema to validate the input and fail the request if invalid. It will perform server side validation if ServerSideFieldValidation is enabled on the api-server, but will fall back to less reliable client-side validation if not.
        		"warn" will warn about unknown or duplicate fields without blocking the request if server-side field validation is enabled on the API server, and behave as "ignore" otherwise.
        		"false" or "ignore" will not perform any schema validation, silently dropping any unknown or duplicate fields.
    - name: wait
      default_value: "false"
      usage: |
        If true, wait for resources to be gone before returning. This waits for finalizers.
inherited_options:
    - name: as
      usage: |
        Username to impersonate for the operation. User could be a regular user or a service account in a namespace.
    - name: as-group
      default_value: '[]'
      usage: |
        Group to impersonate for the operation, this flag can be repeated to specify multiple groups.
    - name: as-uid
      usage: UID to impersonate for the operation.
    - name: cache-dir
      default_value: ${HOME}/.kube/cache
      usage: Default cache directory
    - name: certificate-authority
      usage: Path to a cert file for the certificate authority
    - name: client-certificate
      usage: Path to a client certificate file for TLS
    - name: client-key
      usage: Path to a client key file for TLS
    - name: cluster
      usage: The name of the kubeconfig cluster to use
    - name: context
      usage: The name of the kubeconfig context to use
    - name: insecure-skip-tls-verify
      default_value: "false"
      usage: |
        If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure
    - name: kubeconfig
      usage: Path to the kubeconfig file to use for CLI requests.
    - name: match-server-version
      default_value: "false"
      usage: Require server version to match client version
    - name: namespace
      shorthand: "n"
      usage: If present, the namespace scope for this CLI request
    - name: password
      usage: Password for basic authentication to the API server
    - name: profile
      default_value: none
      usage: |
        Name of profile to capture. One of (none|cpu|heap|goroutine|threadcreate|block|mutex)
    - name: profile-output
      default_value: profile.pprof
      usage: Name of the file to write the profile to
    - name: request-timeout
      default_value: "0"
      usage: |
        The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.
    - name: server
      shorthand: s
      usage: The address and port of the Kubernetes API server
    - name: tls-server-name
      usage: |
        Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used
    - name: token
      usage: Bearer token for authentication to the API server
    - name: user
      usage: The name of the kubeconfig user to use
    - name: username
      usage: Username for basic authentication to the API server
    - name: warnings-as-errors
      default_value: "false"
      usage: |
        Treat warnings received from the server as errors and exit with a non-zero exit code
example: "  # Apply the configuration in pod.json to a pod\n  kubectl apply -f ./pod.json\n  \n  # Apply resources from a directory containing kustomization.yaml - e.g. dir/kustomization.yaml\n  kubectl apply -k dir/\n  \n  # Apply the JSON passed into stdin to a pod\n  cat pod.json | kubectl apply -f -\n  \n  # Apply the configuration from all files that end with '.json' - i.e. expand wildcard characters in file names\n  kubectl apply -f '*.json'\n  \n  # Note: --prune is still in Alpha\n  # Apply the configuration in manifest.yaml that matches label app=nginx and delete all other resources that are not in the file and match label app=nginx\n  kubectl apply --prune -f manifest.yaml -l app=nginx\n  \n  # Apply the configuration in manifest.yaml and delete all the other config maps that are not in the file\n  kubectl apply --prune -f manifest.yaml --all --prune-whitelist=core/v1/ConfigMap"
see_also:
    - kubectl-kruise - kubectl-kruise controls the OpenKruise CRs
    - kubectl-kruise apply edit-last-applied - Edit latest last-applied-configuration annotations of a resource/object
    - kubectl-kruise apply set-last-applied - Set the last-applied-configuration annotation on a live object to match the contents of a file
    - kubectl-kruise apply view-last-applied - View the latest last-applied-configuration annotations of a resource/object
