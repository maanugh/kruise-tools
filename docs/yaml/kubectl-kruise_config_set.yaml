name: kubectl-kruise config set
synopsis: Set an individual value in a kubeconfig file
description: |-
    Set an individual value in a kubeconfig file.

     PROPERTY_NAME is a dot delimited name where each token represents either an attribute name or a map key.  Map keys may not contain dots.

     PROPERTY_VALUE is the new value you want to set. Binary fields such as 'certificate-authority-data' expect a base64 encoded string unless the --set-raw-bytes flag is used.

     Specifying an attribute name that already exists will merge new fields on top of existing values.
usage: kubectl-kruise config set PROPERTY_NAME PROPERTY_VALUE
options:
    - name: help
      shorthand: h
      default_value: "false"
      usage: help for set
    - name: set-raw-bytes
      default_value: "false"
      usage: |
        When writing a []byte PROPERTY_VALUE, write the given string directly without base64 decoding.
inherited_options:
    - name: as
      usage: |
        Username to impersonate for the operation. User could be a regular user or a service account in a namespace.
    - name: as-group
      default_value: '[]'
      usage: |
        Group to impersonate for the operation, this flag can be repeated to specify multiple groups.
    - name: as-uid
      usage: UID to impersonate for the operation.
    - name: cache-dir
      default_value: ${HOME}/.kube/cache
      usage: Default cache directory
    - name: certificate-authority
      usage: Path to a cert file for the certificate authority
    - name: client-certificate
      usage: Path to a client certificate file for TLS
    - name: client-key
      usage: Path to a client key file for TLS
    - name: cluster
      usage: The name of the kubeconfig cluster to use
    - name: context
      usage: The name of the kubeconfig context to use
    - name: insecure-skip-tls-verify
      default_value: "false"
      usage: |
        If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure
    - name: kubeconfig
      usage: use a particular kubeconfig file
    - name: match-server-version
      default_value: "false"
      usage: Require server version to match client version
    - name: namespace
      shorthand: "n"
      usage: If present, the namespace scope for this CLI request
    - name: password
      usage: Password for basic authentication to the API server
    - name: profile
      default_value: none
      usage: |
        Name of profile to capture. One of (none|cpu|heap|goroutine|threadcreate|block|mutex)
    - name: profile-output
      default_value: profile.pprof
      usage: Name of the file to write the profile to
    - name: request-timeout
      default_value: "0"
      usage: |
        The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.
    - name: server
      shorthand: s
      usage: The address and port of the Kubernetes API server
    - name: tls-server-name
      usage: |
        Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used
    - name: token
      usage: Bearer token for authentication to the API server
    - name: user
      usage: The name of the kubeconfig user to use
    - name: username
      usage: Username for basic authentication to the API server
    - name: warnings-as-errors
      default_value: "false"
      usage: |
        Treat warnings received from the server as errors and exit with a non-zero exit code
example: "  # Set the server field on the my-cluster cluster to https://1.2.3.4\n  kubectl config set clusters.my-cluster.server https://1.2.3.4\n  \n  # Set the certificate-authority-data field on the my-cluster cluster\n  kubectl config set clusters.my-cluster.certificate-authority-data $(echo \"cert_data_here\" | base64 -i -)\n  \n  # Set the cluster field in the my-context context to my-cluster\n  kubectl config set contexts.my-context.cluster my-cluster\n  \n  # Set the client-key-data field in the cluster-admin user using --set-raw-bytes option\n  kubectl config set users.cluster-admin.client-key-data cert_data_here --set-raw-bytes=true"
see_also:
    - kubectl-kruise config - Modify kubeconfig files
